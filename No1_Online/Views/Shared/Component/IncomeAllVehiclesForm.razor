@page "/IncomeAllVehiclesForm"
@inject HttpClient Http
@inject IJSRuntime JS
@inject IHttpClientFactory HttpClientFactory
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.JSInterop

<div class="accordion-collapse collapse" id="collapseIncomePerVehicle" aria-labelledby="headingIncomePerVehicle">
    <div class="accordion-body">
        <div class="input-group">
            <span class="input-group-text">From:</span>
            <InputDate TValue="DateTime" id="startDateIncomePerVehicle" class="form-control" @bind-Value="formModel.StartDate" />
        </div>
        <div class="input-group">
            <span class="input-group-text">To:</span>
            <InputDate TValue="DateTime" id="endDate" class="form-control" @bind-Value="formModel.EndDate" />
        </div>
        <div class="custom-input-group">
            <InputText class="form-control custom-form-control" placeholder="Transporter" @bind-Value="formModel.Transporter" />
        </div>
        <div class="custom-input-group">
            <button class="btn btn-outline-success custom-btn-primary" @onclick="HandleValidSubmit">Submit</button>
        </div>
    </div>
</div>

@code {
    private IncomeAllVehiclesFormModel formModel = new();

    protected override void OnInitialized()
    {
        formModel.StartDate = DateTime.Now;
        formModel.EndDate = DateTime.Now;
    }

    private async void HandleValidSubmit()
    {
        var client = HttpClientFactory.CreateClient("default");
        Console.WriteLine("HandleValidSubmit called"); // Debug message
        var response = await client.PostAsJsonAsync("IncomeAllVehicles/OnPostIncomeAllVehiclesAsync", formModel); // Note: relative URI should not start with a slash
        var html = await response.Content.ReadAsStringAsync();

        // Generate unique IDs for the new tab and its content
        var newTabId = "income-per-vehicle-tab";
        var newTabPaneId = "income-per-vehicle-content";

        // Create and inject the new tab and its content
        await JS.InvokeVoidAsync("appendNewTab", newTabId, newTabPaneId, html);
    }

    public class IncomeAllVehiclesFormModel
    {
        public DateTime StartDate { get; set; }
        public DateTime EndDate { get; set; }
        public string Transporter { get; set; }
    }
}
