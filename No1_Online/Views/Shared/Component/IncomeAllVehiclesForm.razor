@page "/IncomeAllVehiclesForm"
@inject IJSRuntime JS

<div class="input-group">
    <span class="input-group-text">From:</span>
    <InputDate TValue="DateTime" id="startDateIncomePerVehicle" class="form-control" @bind-Value="formModel.StartDate" />
</div>
<div class="input-group">
    <span class="input-group-text">To:</span>
    <InputDate TValue="DateTime" id="endDate" class="form-control" @bind-Value="formModel.EndDate" />
</div>
<div class="custom-input-group">
    <InputText class="form-control custom-form-control" placeholder="Transporter" @bind-Value="formModel.Transporter" />
</div>
<div class="custom-input-group">
    <button class="btn btn-outline-success custom-btn-primary" @onclick="LoadIncomeAllVehiclesPage">Submit</button>
</div>

@code {
    private IncomeAllVehiclesFormModel formModel = new();

    protected override void OnInitialized()
    {
        formModel.StartDate = DateTime.Now;
        formModel.EndDate = DateTime.Now;
    }

    private async Task LoadIncomeAllVehiclesPage()
    {
        // Generate unique IDs for the new tab and its content
        var newTabId = "income-all-vehicles-tab";
        var newTabPaneId = "income-all-vehicles-content";
        var tabTitle = "Income All Vehicles";
        var url = "/IncomeAllVehicles";

        // Format the dates
        var startDate = formModel.StartDate.ToString("yyyy-MM-dd");
        var endDate = formModel.EndDate.ToString("yyyy-MM-dd");
        var transporter = formModel.Transporter;
        // Call JavaScript function to add and load the tab
        await JS.InvokeVoidAsync("addTab", newTabId, newTabPaneId, tabTitle, url, startDate, endDate, transporter);
    }

    public class IncomeAllVehiclesFormModel
    {
        public DateTime StartDate { get; set; }
        public DateTime EndDate { get; set; }
        public string Transporter { get; set; }
    }
}
