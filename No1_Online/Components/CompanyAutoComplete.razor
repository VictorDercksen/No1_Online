@using Blazorise
@using Blazorise.Bootstrap
@using Blazorise.Icons.FontAwesome
@using No1_Online.Interfaces;
@using No1_Online.Models;
@using Blazorise.Components;
@inject IJSRuntime JS
@inject ICompanyService companyService

<Autocomplete TItem="Company"
              TValue="string"
              Data="@transporterSuggestions"
              TextField="@(item => item.Name)"
              ValueField="@(item => item.Name)"
              SelectedValueChanged="@OnSelectedValueChanged"
              Placeholder="@Placeholder"
              Filter="AutocompleteFilter.Contains"
              CustomFilter="@CustomCompanyFilter" 
               />

@code {
    private IEnumerable<Company> transporterSuggestions = new List<Company>();
    [Parameter] public EventCallback<string> SelectedValueChanged { get; set; }
    [Parameter] public string Placeholder { get; set; }
    [Parameter] public string SelectedValue { get; set; }

    protected override async Task OnInitializedAsync()
    {
        transporterSuggestions = await companyService.AutoSearchCompany();
    }

    private bool CustomCompanyFilter(Company item, string searchValue)
    {
        return item.Name.Contains(searchValue, StringComparison.OrdinalIgnoreCase);
    }

    private Task OnSelectedValueChanged(string value)
    {
        SelectedValue = value;
        return SelectedValueChanged.InvokeAsync(value);
    }
}
