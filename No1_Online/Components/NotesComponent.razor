@using No1_Online.ViewModels

<div class="loading-schedule-card">
    <div class="card-header">
        <h3 class="mb-0">Notes</h3>
    </div>
    <div class="card-body">
        <EditForm Model="@ViewModel" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            

            <div class="form-group">
                <label class="form-label" for="Grouping">Previous Notes:</label>
                <InputSelect id="Grouping" @bind-Value="ViewModel.SelectedNoteId" class="form-control">
                    @foreach (var note in ViewModel.PreviousNotes)
                    {
                        <option value="@note.Id">@note.Description</option>
                    }
                </InputSelect>
            </div>
            <div class="form-group">
                <label class="form-label" for="inputPerson">Input Person</label>
                <InputText id="inputPerson" @bind-Value="ViewModel.InputPerson" class="form-control" />
            </div>
            <div class="form-group">
                <label class="form-label" for="noteDate">Date</label>
                <InputDate id="noteDate" @bind-Value="ViewModel.NoteDate" class="form-control" />
            </div>
            <div class="form-group">
                <label class="form-label" for="noteDescription">Description</label>
                <InputTextArea id="noteDescription" @bind-Value="ViewModel.NoteDescription" class="form-control" rows="3" />
            </div>
            <div class="text-end mt-4">
                <button type="submit" class="btn btn-primary">Save Note</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public NotesComponentViewModel ViewModel { get; set; }

    [Parameter]
    public EventCallback<NotesComponentViewModel> OnSave { get; set; }

    private async Task HandleValidSubmit()
    {
        await OnSave.InvokeAsync(ViewModel);
    }
}